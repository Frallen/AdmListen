{"version":3,"sources":["components/Main/main.module.scss","components/Admin/admin.module.scss","components/validators/validator.js","components/formControls/controls.jsx","components/Main/main.jsx","redux/mainReducer.js","components/Main/mainContainer.jsx","components/Admin/admin.jsx","components/Admin/AdminContainer.jsx","App.js","config/config.js","redux/redux-store.js","index.js"],"names":["module","exports","required","value","OnlyNum","test","MinLengthTel","length","MinLengthIndex","OnlyLett","formItemLayout","labelCol","xs","span","sm","wrapperCol","LoginLayout","InputPass","input","meta","props","HasError","touched","error","Item","label","validateStatus","hasFeedback","help","Password","AllInput","AllInputCheck","InputEmail","type","TextArea","FormCheck","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","htmlType","block","FormMess","className","classes","formitems","disabled","load","Main","useState","isShow","setShow","isVisible","setVisible","isStatus","SetStatus","status","notification","info","message","description","placement","duration","Clear","main","delay","animConfig","opacity","key","title","text","boxbtn","shape","size","onClick","statusBtn","width","onClose","visible","bodyStyle","paddingBottom","footer","id","CheckStatus","formData","SendMessage","rules","back","ArrowLeftOutlined","rulesColl","header","onOk","onCancel","initialState","access","ErrorMess","SuccMessID","data","histData","MainReducer","state","action","succ","err","datah","st","dispatch","connect","country","getState","a","getFirebase","getFirestore","firestore","date","Date","toLocaleDateString","collection","doc","snap","Status","set","reset","get","exists","sp","FormAdm","Admin","setMain","tablestate","bordered","pagination","pageSize","scroll","x","map","p","push","FIO","index","address","Email","Tel","Tema","Text","hist","columns","dataIndex","fixed","render","row","show","tableBtnB","onDelete","tableBtnR","columns2","Delete","TabButt","dataSource","btns","exit","loginPage","login","AdminAcess","GetAll","where","onSnapshot","querySnapshot","actual","forEach","history","update","useEffect","exact","path","AdminContainer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","reducers","combineReducers","formReducer","firebaseReducer","firestoreReducer","composeEnhancers","compose","store","createStore","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","applyMiddleware","thunk","withExtraArgument","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9c6548a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__32Dq3\",\"title\":\"main_title__3Jsc-\",\"text\":\"main_text__2Yhxf\",\"boxbtn\":\"main_boxbtn__1vn0r\",\"statusBtn\":\"main_statusBtn__nTkHv\",\"form\":\"main_form__1RJbb\",\"formitems\":\"main_formitems__pwff3\",\"sendBtn\":\"main_sendBtn__1lMvj\",\"rules\":\"main_rules__TQOgd\",\"rulesColl\":\"main_rulesColl__38ARj\",\"back\":\"main_back__2hKxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"admin_loginPage__3I5E6\",\"form\":\"admin_form__28u4j\",\"tableBtnB\":\"admin_tableBtnB__WUlQ6\",\"tableBtnR\":\"admin_tableBtnR__Ay4RD\",\"TabButt\":\"admin_TabButt__3zuvc\",\"btns\":\"admin_btns__fT-hs\",\"exit\":\"admin_exit__3i80a\"};","export const required=value=>{\r\n    if(value)return undefined\r\n    return \"Это обязательное поле\"\r\n}\r\n\r\nexport const OnlyNum=value=>{\r\n    if (!/^[0-9\\s]*$/.test(value)) return `Только цифры`;\r\n    return undefined;\r\n}\r\n\r\nexport const MinLengthTel=value=>{\r\n    if(value.length<11) return `Номер состоит из 11 чисел`\r\n    return undefined\r\n}\r\n\r\nexport const MinLengthIndex=value=>{\r\n    if(value.length<6) return \"Индекс состоит из 6 чисел\"\r\n    return undefined\r\n}\r\n\r\nexport const OnlyLett=value=>{\r\n    if (!/^[a-zA-Zа-яА-Я\\s]*$/.test(value))\r\n    return `ФИО состоит только из букв`;\r\n  return undefined;\r\n}","import React from \"react\";\r\nimport { Input, Form } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\nconst LoginLayout = {\r\n  labelCol: {\r\n    xs: { span: 8 },\r\n    sm: { span: 7 },\r\n  },\r\n};\r\n\r\nexport const InputPass = ({ input, meta, ...props }) => {\r\n  const HasError = meta.touched && meta.error;\r\n  return (\r\n    <Form.Item\r\n      label=\"Пароль\"\r\n      {...LoginLayout}\r\n      validateStatus={HasError ? \"error\" : \"validating\"}\r\n      hasFeedback={true && HasError}\r\n      help={HasError && meta.error}\r\n    >\r\n      <Input.Password {...input} {...props}></Input.Password>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\n\r\nexport const AllInput = ({ input, meta, label, ...props }) => {\r\n  const HasError = meta.touched && meta.error;\r\n  return (\r\n    <Form.Item\r\n      label={label}\r\n      {...formItemLayout}\r\n      validateStatus={HasError ? \"error\" : \"validating\"}\r\n      hasFeedback={HasError && true}\r\n      help={HasError && meta.error}\r\n    >\r\n      <Input {...input} {...props}></Input>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\n\r\nexport const AllInputCheck = ({ input, meta, label, ...props }) => {\r\n  const HasError = meta.touched && meta.error;\r\n  return (\r\n    <Form.Item\r\n      label={label}\r\n      {...LoginLayout}\r\n      validateStatus={HasError ? \"error\" : \"validating\"}\r\n      hasFeedback={HasError && true}\r\n      help={HasError && meta.error}\r\n    >\r\n      <Input {...input} {...props}></Input>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport const InputEmail = ({ input, meta, ...props }) => {\r\n  const HasError = meta.touched && meta.error;\r\n  return (\r\n    <Form.Item\r\n      {...formItemLayout}\r\n      label=\"Электронная почта\"\r\n      validateStatus={HasError ? \"error\" : \"validating\"}\r\n      hasFeedback={HasError && true}\r\n      help={HasError && meta.error}\r\n    >\r\n      <Input {...input} {...props} type=\"email\"></Input>\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport const TextArea = ({ input, meta, ...props }) => {\r\n  const HasError = meta.touched && meta.error;\r\n  return (\r\n    <Form.Item\r\n      {...formItemLayout}\r\n      label=\"Текст обращения\"\r\n      validateStatus={HasError ? \"error\" : \"validating\"}\r\n      hasFeedback={HasError && true}\r\n      help={HasError && meta.error}\r\n    >\r\n      <Input.TextArea {...input} {...props}></Input.TextArea>\r\n    </Form.Item>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./main.module.scss\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Button, Form, Collapse, Modal, Drawer, notification } from \"antd\";\r\nimport {\r\n  required,\r\n  OnlyNum,\r\n  MinLengthTel,\r\n  OnlyLett,\r\n  MinLengthIndex,\r\n} from \"../validators/validator\";\r\nimport {\r\n  TextArea,\r\n  InputEmail,\r\n  AllInput,\r\n  AllInputCheck,\r\n} from \"./../formControls/controls\";\r\nimport CollapsePanel from \"antd/lib/collapse/CollapsePanel\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport QueueAnim from \"rc-queue-anim\";\r\n\r\nlet Box = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.formitems}>\r\n      <Field\r\n        component={AllInput}\r\n        label=\"ФИО\"\r\n        name=\"FIO\"\r\n        validate={[required, OnlyLett]}\r\n      ></Field>\r\n      <Field\r\n        component={AllInput}\r\n        name=\"index\"\r\n        label=\"Индекс\"\r\n        validate={[required, OnlyNum, MinLengthIndex]}\r\n      ></Field>\r\n      <Field\r\n        component={AllInput}\r\n        label=\"Адрес\"\r\n        name=\"address\"\r\n        validate={[required]}\r\n      ></Field>\r\n      <Field component={InputEmail} name=\"Email\" validate={[required]}></Field>\r\n      <Field\r\n        component={AllInput}\r\n        label=\"Телефон\"\r\n        name=\"Tel\"\r\n        validate={[required, OnlyNum, MinLengthTel]}\r\n      ></Field>\r\n      <Field\r\n        component={AllInput}\r\n        name=\"Tema\"\r\n        label=\"Тема\"\r\n        validate={[required]}\r\n      ></Field>\r\n      <Field component={TextArea} name=\"Text\" validate={[required]}></Field>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" block disabled={props.load}>\r\n          Отправить\r\n        </Button>\r\n      </Form.Item>\r\n    </form>\r\n  );\r\n};\r\nlet BoxCheck = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={AllInputCheck}\r\n        name=\"id\"\r\n        validate={[required]}\r\n        label=\"Id обращения\"\r\n      ></Field>\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" type=\"primary\" block>\r\n          Проверить\r\n        </Button>\r\n      </Form.Item>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet FormCheck = reduxForm({\r\n  form: \"Check\",\r\n})(BoxCheck);\r\n\r\nlet FormMess = reduxForm({\r\n  form: \"Message\",\r\n})(Box);\r\n\r\nlet Main = (props) => {\r\n  const [isShow, setShow] = useState(false);\r\n  const [isVisible, setVisible] = useState(false);\r\n  const [isStatus, SetStatus] = useState(false);\r\n\r\n  let onSubmit = (formData) => {\r\n    props.SendMessage(formData);\r\n    setVisible(true);\r\n  };\r\n  let onSubmitCheck = (id) => {\r\n    props.CheckStatus(id);\r\n    SetStatus(false);\r\n  };\r\n  if (props.status) {\r\n    notification.info({\r\n      message: `Статуc обращения`,\r\n      description: props.status,\r\n      placement: \"topLeft\",\r\n      duration:15,\r\n    });\r\n    props.Clear();\r\n  }\r\n  return (\r\n    <div>\r\n      {!isShow && (\r\n        <div className={classes.main}>\r\n          <div>\r\n            <QueueAnim delay={600} animConfig={[{ opacity: [1, 0.2] }]}>\r\n              <div key=\"a\">\r\n                <h1 className={classes.title}>Интернет приемная</h1>\r\n                <p className={classes.text}>\r\n                  На этой странице вы можете отправить обращение в администрацию\r\n                  Слободского района. Поступающие письма рассматриваются и\r\n                  направляются для разрешения имеющихся в них вопросов в органы\r\n                  исполнительной власти Кировской области в соответствии с\r\n                  Федеральным законом от 2 мая 2006 года № 59-ФЗ «О порядке\r\n                  рассмотрения обращений граждан Российской Федерации».\r\n                </p>\r\n                <div className={classes.boxbtn} key=\"b\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    size=\"large\"\r\n                    onClick={() => setShow(true)}\r\n                    disabled={props.load}\r\n                  >\r\n                    Сделать обращение\r\n                  </Button>\r\n                  <Button\r\n                    className={classes.statusBtn}\r\n                    shape=\"round\"\r\n                    size=\"large\"\r\n                    onClick={() => SetStatus(true)}\r\n                  >\r\n                    Проверить статус обращения\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </QueueAnim>\r\n            <Drawer\r\n              title=\"Проверить статус\"\r\n              width={400}\r\n              onClose={() => SetStatus(false)}\r\n              visible={isStatus}\r\n              bodyStyle={{ paddingBottom: 80 }}\r\n              footer={\r\n                <div>\r\n                  <Button onClick={() => SetStatus(false)} type=\"primary\" block>\r\n                    Закрыть\r\n                  </Button>\r\n                </div>\r\n              }\r\n            >\r\n              <FormCheck {...props} onSubmit={onSubmitCheck}></FormCheck>\r\n            </Drawer>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isShow && (\r\n        <QueueAnim\r\n          delay={300}\r\n          animConfig={[{ opacity: [1, 0.2] }, { opacity: [1, 0] }]}\r\n        >\r\n          <div className={classes.form} key=\"a\">\r\n            <FormMess {...props} onSubmit={onSubmit}></FormMess>\r\n\r\n            <div className={classes.rules}>\r\n              <Button onClick={() => setShow(false)} className={classes.back}>\r\n                <ArrowLeftOutlined />\r\n                Назад\r\n              </Button>\r\n              <p>\r\n                Нажимая кнопку <b>Отравить</b>, вы даете свое согласие на\r\n                передачу информации обращения в электронной форме по открытым\r\n                каналам связи сети Интернет и на обработку ваших персональных\r\n                данных\r\n              </p>\r\n              <Collapse key=\"1\" className={classes.rulesColl}>\r\n                <CollapsePanel header=\"Правило №1\" key=\"1\">\r\n                  Письма, содержащие нецензурные, либо оскорбительные выражения,\r\n                  информацию рекламного характера не рассматриваются.\r\n                </CollapsePanel>\r\n\r\n                <CollapsePanel header=\"Правило №2\" key=\"2\">\r\n                  Ответ на ваше обращение будет направлен на указанный\r\n                  электронный или почтовый адрес. Если в письменном обращении не\r\n                  будет указана фамилия и адрес заявителя, либо указан неполный\r\n                  или недостоверный адрес, ответ на такое обращение не дается.\r\n                </CollapsePanel>\r\n                <CollapsePanel header=\"Правило №3\" key=\"3\">\r\n                  При написании обращения просим ясно, грамотно и лаконично\r\n                  формулировать текст письма — это ускорит его обработку и\r\n                  подготовку ответа.\r\n                </CollapsePanel>\r\n                <CollapsePanel header=\"Правило №4\" key=\"4\">\r\n                  Информация о персональных данных граждан, направивших\r\n                  обращение, хранится и обрабатывается с соблюдением требований\r\n                  российского законодательства о персональных данных.\r\n                </CollapsePanel>\r\n              </Collapse>\r\n            </div>\r\n          </div>\r\n        </QueueAnim>\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Обращение успешно отправлено\"\r\n        visible={isVisible}\r\n        onOk={() => setVisible(false)}\r\n        onCancel={() => setVisible(false)}\r\n      >\r\n        <p>\r\n          Ваще обращение успешно отправлено и будет обработано в ближайщее время\r\n        </p>\r\n        <p>Ваш номер обращения - {props.message}</p>\r\n        <p>\r\n          <b>Сохраните ваш номер обращения</b>\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { reset } from \"redux-form\";\r\n\r\nconst Send = \"Send\";\r\nconst Succ = \"Succ\";\r\nconst Error = \"Error\";\r\nconst Admin = \"Admin\";\r\nconst ClearALL = \"ClearALL\";\r\nconst GetActual = \"GetActual\";\r\nconst GetHistory = \"GetHistory\";\r\nconst Check = \"Check\";\r\n\r\nlet initialState = {\r\n  access: false,\r\n  ErrorMess: null,\r\n  SuccMessID: null,\r\n  load: false,\r\n  data: [],\r\n  histData: [],\r\n  status: null,\r\n};\r\n\r\nlet MainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Send:\r\n      return {\r\n        ...state,\r\n        load: true,\r\n      };\r\n    case Succ:\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        ErrorMess: null,\r\n        SuccMessID: action.succ,\r\n      };\r\n    case Error:\r\n      return {\r\n        ...state,\r\n        ErrorMess: action.err,\r\n        load: false,\r\n      };\r\n    case Admin:\r\n      return {\r\n        ...state,\r\n        access: true,\r\n      };\r\n    case ClearALL:\r\n      return {\r\n        ...state,\r\n        ErrorMess: null,\r\n        access: false,\r\n        status: null,\r\n      };\r\n    case GetActual:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case GetHistory:\r\n      return {\r\n        ...state,\r\n        histData: action.datah,\r\n      };\r\n    case Check:\r\n      return {\r\n        ...state,\r\n        status: action.st,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default MainReducer;\r\n\r\nexport const SendMessage = (data) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  const date = new Date().toLocaleDateString();\r\n  data.date = date;\r\n  try {\r\n    const snap = await firestore.collection(\"Messages\").doc();\r\n    data.id = snap.id;\r\n    data.Status = \"На обработке\";\r\n    snap.set({\r\n      ...data,\r\n    });\r\n    dispatch({ type: Succ, succ: data.id });\r\n    dispatch(reset(\"Message\"));\r\n  } catch (err) {\r\n    dispatch({ type: Error, err: err.message });\r\n  }\r\n};\r\n\r\nexport const AdminAcess = (data) => (dispatch) => {\r\n  if (data.Password === \"123456\") {\r\n    dispatch({ type: Admin });\r\n  } else {\r\n    dispatch({ type: Error, err: \"Неверный пароль\" });\r\n  }\r\n};\r\n\r\nexport const Clear = () => (dispatch) => {\r\n  dispatch({ type: ClearALL });\r\n};\r\n\r\nexport const GetAll = () => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  await firestore\r\n    .collection(\"Messages\")\r\n    .where(\"Status\", \"==\", \"На обработке\")\r\n    .onSnapshot(function (querySnapshot) {\r\n      var actual = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        actual.push(doc.data());\r\n      });\r\n\r\n      dispatch({ type: GetActual, data: actual });\r\n    });\r\n\r\n  await firestore\r\n    .collection(\"Messages\")\r\n    .where(\"Status\", \"==\", \"Обработано\")\r\n    .onSnapshot(function (querySnapshot) {\r\n      var history = [];\r\n      querySnapshot.forEach(function (doc) {\r\n        history.push(doc.data());\r\n      });\r\n\r\n      dispatch({ type: GetHistory, datah: history });\r\n    });\r\n};\r\n\r\nexport const Delete = (id) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  let data;\r\n  const firestore = getFirestore();\r\n  const snap = await firestore.collection(\"Messages\").doc(id).get();\r\n\r\n  data = snap.data();\r\n\r\n  data.Status = \"Обработано\";\r\n  await firestore\r\n    .collection(\"Messages\")\r\n    .doc(id)\r\n    .update({\r\n      ...data,\r\n    });\r\n};\r\n\r\nexport const CheckStatus = (data) => async (\r\n  dispatch,\r\n  getState,\r\n  { getFirebase, getFirestore }\r\n) => {\r\n  const firestore = getFirestore();\r\n  const snap = await firestore.collection(\"Messages\").doc(data.id).get();\r\n  if (snap.exists) {\r\n    const sp = snap.data();\r\n    const st =\r\n      sp.Status === \"Обработано\"\r\n        ? \"Обращение обработано, проверьте электронную почту, на нее была выслана информация о решении.\"\r\n        : \"Обращение еще не обработано, в скором времени оно будет рассмотрено.\";\r\n    dispatch({ type: Check, st: st });\r\n  } else {\r\n    let st = \"Такого обращения не найдено\";\r\n    dispatch({ type: Check, st: st });\r\n  }\r\n\r\n  dispatch(reset(\"Check\"));\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Main from \"./main\";\r\nimport { SendMessage, CheckStatus,Clear } from \"./../../redux/mainReducer\";\r\n\r\nlet Box = (props) => {\r\n  let SendMessage = (data) => {\r\n    props.SendMessage(data);\r\n  };\r\n  let CheckStatus = (id) => {\r\n    props.CheckStatus(id);\r\n  };\r\n  let Clear=()=>{\r\n    props.Clear()\r\n  }\r\n  return (\r\n    <Main {...props} SendMessage={SendMessage} CheckStatus={CheckStatus} Clear={Clear}></Main>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    load: state.main.load,\r\n    error: state.main.ErrorMess,\r\n    message: state.main.SuccMessID,\r\n    status: state.main.status,\r\n    country: state.main.country,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { SendMessage, CheckStatus,Clear })(Box);\r\n","import React, { useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../validators/validator\";\r\nimport { InputPass } from \"./../formControls/controls\";\r\nimport { Button, message, Table, Modal } from \"antd\";\r\nimport classes from \"./admin.module.scss\";\r\nimport { Form } from \"antd\";\r\n\r\nlet Box = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.form}>\r\n      <Field\r\n        component={InputPass}\r\n        name=\"Password\"\r\n        validate={[required]}\r\n      ></Field>\r\n      <Form.Item>\r\n        <Button htmlType=\"submit\" type=\"primary\" block>\r\n          Войти\r\n        </Button>\r\n      </Form.Item>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet FormAdm = reduxForm({\r\n  form: \"Login\",\r\n})(Box);\r\n\r\nlet Admin = (props) => {\r\n  const [isVisible, setVisible] = useState(false);\r\n  const [Main, setMain] = useState();\r\n  const [isShow, setShow] = useState(false);\r\n  let data = [];\r\n  let datah = [];\r\n  let tablestate = {\r\n    bordered: true,\r\n\r\n    pagination: { pageSize: 50 },\r\n    size: \"small\",\r\n    scroll: { x: 900 },\r\n  };\r\n\r\n  props.data.map((p) =>\r\n    data.push({\r\n      key: p.id,\r\n      id: p.id,\r\n      date: p.date,\r\n      FIO: p.FIO,\r\n      index: p.index,\r\n      address: p.address,\r\n      Email: p.Email,\r\n      Tel: p.Tel,\r\n      Tema: p.Tema,\r\n      Text: p.Text,\r\n    })\r\n  );\r\n\r\n  props.hist.map((p) =>\r\n    datah.push({\r\n      key: p.id,\r\n      id: p.id,\r\n      date: p.date,\r\n      FIO: p.FIO,\r\n      index: p.index,\r\n      address: p.address,\r\n      Email: p.Email,\r\n      Tel: p.Tel,\r\n      Tema: p.Tema,\r\n      Text: p.Text,\r\n    })\r\n  );\r\n\r\n  let columns = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Дата\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"ФИО\",\r\n      dataIndex: \"FIO\",\r\n      key: \"FIO\",\r\n    },\r\n    {\r\n      title: \"Индекс\",\r\n      dataIndex: \"index\",\r\n      key: \"index\",\r\n    },\r\n    {\r\n      title: \"Адрес\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Почта\",\r\n      dataIndex: \"Email\",\r\n      key: \"Email\",\r\n    },\r\n    {\r\n      title: \"Телефон\",\r\n      dataIndex: \"Tel\",\r\n      key: \"Tel\",\r\n    },\r\n    {\r\n      title: \"Тема\",\r\n      dataIndex: \"Tema\",\r\n      key: \"Tema\",\r\n    },\r\n    {\r\n      title: \"Текст\",\r\n      dataIndex: \"Text\",\r\n      key: \"Text\",\r\n      fixed: \"right\",\r\n      render: (text, row) => (\r\n        <span onClick={() => show(row.Text)} className={classes.tableBtnB}>\r\n          Показать\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Действие\",\r\n      key: \"Action\",\r\n      fixed: \"right\",\r\n      render: (text, row) => (\r\n        <span onClick={() => onDelete(row.id)} className={classes.tableBtnR}>\r\n          Удалить\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let columns2 = [\r\n    {\r\n      title: \"id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Дата\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"ФИО\",\r\n      dataIndex: \"FIO\",\r\n      key: \"FIO\",\r\n    },\r\n    {\r\n      title: \"Индекс\",\r\n      dataIndex: \"index\",\r\n      key: \"index\",\r\n    },\r\n    {\r\n      title: \"Адрес\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Почта\",\r\n      dataIndex: \"Email\",\r\n      key: \"Email\",\r\n    },\r\n    {\r\n      title: \"Телефон\",\r\n      dataIndex: \"Tel\",\r\n      key: \"Tel\",\r\n    },\r\n    {\r\n      title: \"Тема\",\r\n      dataIndex: \"Tema\",\r\n      key: \"Tema\",\r\n    },\r\n    {\r\n      title: \"Текст\",\r\n      dataIndex: \"Text\",\r\n      key: \"Text\",\r\n      fixed: \"right\",\r\n      render: (text, row) => (\r\n        <span onClick={() => show(row.Text)} className={classes.tableBtnB}>\r\n          Показать\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  let onDelete = (id) => {\r\n    props.Delete(id);\r\n  };\r\n\r\n  let show = (text) => {\r\n    setMain(text);\r\n    setVisible(true);\r\n  };\r\n\r\n  let onSubmit = (formData) => {\r\n    props.AdminAcess(formData);\r\n  };\r\n\r\n  if (props.error) {\r\n    message.error(props.error);\r\n    props.Clear();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!props.access ? (\r\n        <div className={classes.loginPage}>\r\n          <div className={classes.login}>\r\n            <FormAdm {...props} onSubmit={onSubmit}></FormAdm>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.TabButt}>\r\n          {!isShow && (\r\n            <Table {...tablestate} columns={columns} dataSource={data}></Table>\r\n          )}\r\n          {isShow && (\r\n            <Table\r\n              {...tablestate}\r\n              columns={columns2}\r\n              dataSource={datah}\r\n            ></Table>\r\n          )}\r\n          <div className={classes.btns}>\r\n            {!isShow && <Button onClick={() => setShow(true)}>История</Button>}\r\n            {isShow && (\r\n              <Button onClick={() => setShow(false)}>Актуальные</Button>\r\n            )}\r\n            <Button className={classes.exit} onClick={() => props.Clear()}>\r\n              Выход\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <Modal\r\n          title=\"Текст обращения\"\r\n          visible={isVisible}\r\n          onOk={() => setVisible(false)}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n          <p>{Main}</p>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Admin from \"./admin\";\r\nimport { AdminAcess, Clear, GetAll, Delete } from \"./../../redux/mainReducer\";\r\n\r\n\r\nlet Box = (props) => {\r\n  useEffect(() => {\r\n    props.GetAll();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let AdminAcess = (data) => {\r\n    props.AdminAcess(data);\r\n  };\r\n  let Clear = () => {\r\n    props.Clear();\r\n  };\r\n  let Delete = (id) => {\r\n    props.Delete(id);\r\n  };\r\n\r\n  return (\r\n    <Admin\r\n      {...props}\r\n      AdminAcess={AdminAcess}\r\n      Clear={Clear}\r\n      Delete={Delete}\r\n    ></Admin>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    access: state.main.access,\r\n    error: state.main.ErrorMess,\r\n    data: state.main.data,\r\n    hist: state.main.histData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { AdminAcess, Clear, GetAll, Delete })(\r\n  Box\r\n);\r\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport MainContainer from \"./components/Main/mainContainer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AdminContainer from \"./components/Admin/AdminContainer\";\n\nlet App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainContainer></MainContainer>\n        </Route>\n        <Route path=\"/admin\">\n          <AdminContainer></AdminContainer>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(App);\n","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDcw2eyquwfvQcwFIfiasnvjxFZ5cXCbcc\",\r\n    authDomain: \"admlisten-24088.firebaseapp.com\",\r\n    databaseURL: \"https://admlisten-24088.firebaseio.com\",\r\n    projectId: \"admlisten-24088\",\r\n    storageBucket: \"admlisten-24088.appspot.com\",\r\n    messagingSenderId: \"202332007978\",\r\n    appId: \"1:202332007978:web:d59c95b15b12e445235d53\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport {\r\n  firebaseReducer,\r\n  reactReduxFirebase,\r\n  getFirebase,\r\n} from \"react-redux-firebase\";\r\nimport {\r\n  reduxFirestore,\r\n  firestoreReducer,\r\n  getFirestore,\r\n} from \"redux-firestore\";\r\nimport firebase from \"./../config/config\";\r\nimport thunk from \"redux-thunk\";\r\nimport MainReducer from \"./mainReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  main: MainReducer,\r\n  form: formReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  attachAuthIsReady: true\r\n};\r\n\r\n// ДЛЯ РАСШИРЕНИЯ В ХРОМЕ\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n    : compose;\r\n//////////\r\n\r\nlet store = createStore(\r\n  reducers,\r\n  composeEnhancers(\r\n    reactReduxFirebase(firebase,rrfConfig),\r\n    reduxFirestore(firebase),\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }))\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}